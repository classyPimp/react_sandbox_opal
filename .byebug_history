continue
@controller.params
continue
@permitted_attributes
continue
price_item_ids
continue
price_item_ids
continue
@params[:offered_service][:avatar]
@params[:offered_service][:avatar][:offered_sercvice_avatar]
@params[:offered_service][:avatar][:offered_sercvice_avatar][:avatar]
p e
continue
price_item_ids
continue
x
@controller.convert_to_array_if_simulated_array! x
x = @associated_price_item_params
continue
x
@controller.convert_to_array_if_simulated_array! x
x = @associated_price_item_params
continue
p e
continue
@associated_price_item_params.each {|k, v| p v}
@associated_price_item_params
continue
p e
continue
params
@params
continue
params
p e
params
continue
@params
price_item_ids
continue
params.require(:offered_service).permit(price_items: [{}])
params.require(:offered_service).permit(price_items: [])
params.require(:offered_service).permit(:price_items => {price_item: [:id, :name]})
params.require(:offered_service).permit(:price_items => [{price_item: [:id, :name]}])
params.require(:offered_service).permit(:price_items => [:id, :name])
params
params.require(:offered_service).permit(:price_items => [{price_item: [:id, :name]}])
params.require(:offered_service).permit(:price_items)
params.require(:offered_service)
params.require(:offered_service).permit(price_items: [price_item: [:id, :name]])
params.require(:offered_service).permit(price_items: [{price_item: [:id, :name]}])
params.require(:offered_service).permit(price_items: [:id, :name])
params
continue
params
continue
params[:offered_service][:price_items]
params[:offered_service]
params
continue
params
continue
@params[:offered_service][:price_items]
@associated_price_item_params
@price_items
price_item_ids
continue
p e
continue
p e
continue
p e
@model.avatar
@model
p e
continue
p e
continue
@permitted_attributes
@model
p e
continue
p e
continue
p e
continue
p e
continue
@params[:offered_service][:avatar][]
@params[:offered_service]
continue
@params[:offered_service][:avatar]
@params
continue
p e
continue
price_item_ids
continue
price_item_ids
continue
p x[0]
if !!x[0]['_destroy'] && x[0]['id']; p true; else; p false;
if !x[0]['_destroy'] && x[0]['id']; p true; else; p false;
if !x[0]['_destroy'] && x[0]['id']; p true; else; p false; end
if !x[0]['_destroy'] && x[0]['id']; p true; elsif; p false; end
if !x[0]['_destroy'] && x[0]['id']; p true; else; p false; end
p !x[0]['_destroy'] && x[0]['id']
!x[0]['_destroy'] && x[0]['id']
x = @associated_price_item_params
price_item_ids
continue
@associated_price_item_params[0]['price_item']['_destroy']
@associated_price_item_params
price_item_ids
continue
@model.paginate(per_page: per_page, page: page)
continue
@blog.si_user1id
@blog.as_json(@perms.serialize_on_success)
@blogs.as_json(@perms.serialize_on_success)
continue
@appointment.patient_id.class
@appointment.patient_id
@appointment.errors
@appointment.save
@appointments.save
@appointment.patient_id
@appointment.user_id
continue
p e
continue
p e
continue
params[:price_category][:name] = nil
continue
params[:price_category][:name] = nil
continue
params[:price_category][:name] = nil
continue
coninue
params[:price_category][:name] = nil
continue
params[:to]
params[:from]
continue
params[:from]
continue
@model
continue
per_page
page
@model
continue
per_page
page
@model
continue
model.total_pages
model.total_pages = nil
model.total_pages
model.total_entries
model.current_page
continue
@user.roles
continue
@permitted_attributes = @permitted_attributes.to_h
@permitted_attributes.to_h
continue
@permitted_attributes.permit(roles_attributes: [:name])
@permitted_attributes.require('roles_attributes').has_key? :name
@permitted_attributes.has_key?('name')
@permitted_attributes.has_key?('roles_attributes')
@permitted_attributes.has_key('roles_attributes')
continue
@permitted_attributes.permit!
@permitted_attributes.require(:roles_attributes).permit(:name)
@permitted_attributes.require(:roles_attributes)
@permitted_attributes.permit('roles_attributes')
@permitted_attributes.permit(:roles_attributes)
continue
@permitted_attributes.require('roles_attributes').permitted?
@permitted_attributes.require('roles_attributes')
@permitted_attributes
@permitted_attributes.permitted?
@permitted_attributes[:roles_attributes].permitted?
@permitted_attributes[:roles_attributes]
@permitted_attributes
continue
@permitted_attributes
continue
x.try(:to_i!)
x.try(:to_i)
x.try(:to_i).is_a?(Integer)
x = @attributes_that_were_assigned["price"]
continue
@attributes_that_were_assigned
continue
@permitted_attributes["price"]
@permitted_attributes[:doo]
@permitted_attributes
continue
x.body
continue
render plain: x.body.html_safe
x = fetch('http://pikabu.ru')
x.body
x = fetch('http://localhost:8888/')
continue
render plain: x.body
x.body
x
x = fetch('http://pikabu.ru')
continue
render plain: x.body
x.body
continue
x
render plain: x.body
continue
response.read_body
response.value
response.body
response.value
response
continue
@permitted_attributes
continue
@permitted_attributes
continue
@params
@permitted_attributes
@permitted_attrtibutes
@permitted_atrtibutes
continue
@permitted_attributes
continue
@permitted_attributes
continue
@permitted_attributes
continue
e
@user.errors
@user.error
continue
e
@user.errors
@user
continue
appointment_destroy_cmpsr
continue
appointment
continue
appointments[0]
appointment[0]
          appointment_destroy_cmpsr = ComposerFor::Appointment::Doctor::Destroy(appointment)
